name: Build and Test

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        include:
          # Native amd64 build on GitHub hosted runner
          - os: ubuntu-latest
            arch: amd64
            target: x86_64-unknown-linux-gnu
          # Native arm64 build on GitHub hosted ARM64 runner
          - os: ubuntu-24.04-arm
            arch: arm64
            target: aarch64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rs/target
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-cargo-

      - name: Install dependencies
        run: |
          cd rs && cargo fetch

      - name: Format check (Rust)
        run: |
          cd rs && cargo fmt --all -- --check

      - name: Lint (Rust)
        run: |
          cd rs && cargo clippy -- -D warnings

      - name: Build Rust library for ${{ matrix.arch }}
        run: |
          make rust-native

      - name: Upload to release if tag push
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Rename the file with architecture suffix
          cp target/lib/native/libgopsutil_rs.so libgopsutil_rs-linux-${{ matrix.arch }}.so

          # Upload to release
          gh release upload ${{ github.ref_name }} libgopsutil_rs-linux-${{ matrix.arch }}.so --clobber
